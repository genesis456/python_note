HTTP协议

请求格式 :   请求行 : GET  /   HTTP/1.1
            请求头
            空行
            请求体

响应格式:    响应行 HTTP/1.1  200  OK
            响应头 Content-Typy: text/html
            空行
            响应体 : 响应内容

HTTPServer 2.0

主要功能 ：
【1】 接收客户端（浏览器）请求
【2】 解析客户端发送的请求
【3】 根据请求组织数据内容
【4】 将数据内容形成http响应格式返回给浏览器

升级点 ：
【1】 采用IO并发，可以满足多个客户端同时发起请求情况
【2】 做基本的请求解析，根据具体请求返回具体内容，同时满足客户端简单的非网页请求情况
【3】 通过类接口形式进行功能封装　

技术分析 :  select IO 多路复用
           tcp 传输

封装设计 : 类封装

* 在用户的使用角度进行流程设计
  1. 你的类要实现什么功能?
  2. 你希望用户如何去使用你的类?

* 基本原则
  1. 当实现的功能比较复杂,需要分步实现
     类实例化对象 --> 对象调用指定方法,按步骤实现

  2. 实现的类需要用户自己去决定很多内容细节
     你去实现一个基类 --> 让用户去继承你的功能,在子类中自我完善

  3. 当实现的类功能并不复杂,是一个简单的服务功能
     你尽量替用户完善功能,不能替用户决定的量通过参数传入即可

　